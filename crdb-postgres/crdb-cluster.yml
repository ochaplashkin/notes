version: '3.9'

services:

  node0:
    container_name: node0
    hostname: node0
    image:  cockroachdb/cockroach-unstable:v23.2.0-beta.1
    command: start  --insecure --join=node0,node1,node2 --listen-addr=node0:26257 --advertise-addr=node0:26257 --max-sql-memory=.25 --cache=.25
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'

  node1:
    container_name: node1
    hostname: node1
    image:  cockroachdb/cockroach-unstable:v23.2.0-beta.1
    command: start  --insecure --join=node0,node1,node2 --listen-addr=node1:26257 --advertise-addr=node1:26257 --max-sql-memory=.25 --cache=.25
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'

  node2:
    container_name: node2
    hostname: node2
    image:  cockroachdb/cockroach-unstable:v23.2.0-beta.1
    command: start  --insecure --join=node0,node1,node2 --listen-addr=node2:26257 --advertise-addr=node2:26257 --max-sql-memory=.25 --cache=.25
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'

  init:
    container_name: init
    image:  cockroachdb/cockroach-unstable:v23.2.0-beta.1
    command: init --host=node0 --insecure
    depends_on:
      - node0

  postgres:
    image: postgres:15-alpine
    container_name: postgres_container
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d root"]
      interval: 30s
      timeout: 10s
      retries: 5

  lb:
    container_name: lb
    hostname: lb
    build: haproxy
    ports:
      - "26000:26000"
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - node0
      - node1
      - node2

  client:
    container_name: client
    hostname: client
    image:  cockroachdb/cockroach-unstable:v23.2.0-beta.1
    entrypoint: ["/usr/bin/tail", "-f", "/dev/null"]